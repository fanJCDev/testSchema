import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'dynamicArray' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. 2D_INTEGER_ARRAY queries
     */

    public static List<Integer> dynamicArray(int n, List<List<Integer>> queries) {
    // Write your code here
    ArrayList<ArrayList<Integer>> arr = new ArrayList<ArrayList<Integer>>();
    ArrayList<Integer> result = new ArrayList<Integer>();
    int lastAnswer=0;
        
    for(int i=0;i<n;i++)
    {
      arr.add(new ArrayList<Integer>());//arrays are zero indexed
    }
        
    for(List<Integer> element: queries)
    {            
        int idx=(element.get(1)^lastAnswer)%n;//x=element.get(1)
            
        int size=arr.get(idx).size();//y=element.get(2)
                
        switch(element.get(0))
        {
            /*
            Query: 1 x y
            Query: 2 x y
            */
            case 1: arr.get(idx).add(element.get(2));//Append the integer y to arr[idx].
                    break;
                                
            case 2: lastAnswer= arr.get(idx).get(element.get(2)%size);
                    result.add(lastAnswer);
        }
    }
    return result;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int q = Integer.parseInt(firstMultipleInput[1]);

        List<List<Integer>> queries = new ArrayList<>();

        IntStream.range(0, q).forEach(i -> {
            try {
                queries.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        List<Integer> result = Result.dynamicArray(n, queries);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining("\n"))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
