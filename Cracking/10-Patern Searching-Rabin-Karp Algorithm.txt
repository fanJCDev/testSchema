public class HelloWorld{
    public final static int allcharacter = 256;
    static void search(String pattern, String text, int evryPrime)
    {
        int paternLen = pattern.length();
        int textLen = text.length();
        int i, j;
        int hashPatrn = 0; // hash value for pattern
        int hasText = 0; // hash value for txt
        int h = 1;//allcharacter ^ pattern.length()-1
        
        // The value of h would be "pow(d, M-1)%q"
        for (i = 0; i < paternLen-1; i++)//teta(m)
            h = (h*allcharacter)%evryPrime;

        System.out.println("hhhhhhhhhhh="+h);

        // Calculate the hash value of pattern and first
        // window of text
        for (i = 0; i < paternLen; i++)
        { 
            hashPatrn = (allcharacter*hashPatrn + pattern.charAt(i))%evryPrime;
            System.out.println("hash patern="+hashPatrn);
            hasText = (allcharacter*hasText + text.charAt(i))%evryPrime;
            System.out.println("hash text="+hasText);
        }

        
        // Slide the pattern over text one by one
        for (i = 0; i <= textLen - paternLen; i++)
        {
            // Check the hash values of current window of text
            // and pattern. If the hash values match then only
            // check for characters on by one
            if ( hashPatrn == hasText )
            {
                /* Check for characters one by one */
                for (j = 0; j < paternLen; j++)
                {
                    if (text.charAt(i+j) != pattern.charAt(j))
                        break;
                }
     
                // if p == t and pat[0...M-1] = txt[i, i+1, ...i+M-1]
                if (j == paternLen)
                    System.out.println("Pattern found at index " + i);
            }
     
            // Calculate hash value for next window of text: Remove
            // leading digit, add trailing digit
            if ( i < textLen-paternLen )
            {
                hasText = (allcharacter*(hasText - text.charAt(i)*h) + text.charAt(i+paternLen))%evryPrime;
                System.out.println("hash text="+hasText);
     
                // We might get negative value of t, converting it
                // to positive
                if (hasText < 0){
                    System.out.println("danger---hash text="+hasText);
                    hasText = (hasText + evryPrime);
                    System.out.println("danger---hash text="+hasText);
                }
                
            }
        }        
    }
     public static void main(String []args){
        String pat="234";
        String txt="234235234";
        search(pat, txt, 5);//o(mn)
     }
}