import java.util.stream.Stream;
import java.math.BigInteger;  
import java.util.*;
public class Fibonacci {
public static void main(String[] args) {
    System.out.println("-------------------------------------------------------------");
    /*Stream.iterate(new BigInteger[] { BigInteger.ONE, BigInteger.ONE },
               p -> new BigInteger[] { p[1], p[0].add(p[1]) })
      .forEach(p -> System.out.println(p[0]));*/
    System.out.println("-------------------------------------------------------------");
    Stream.iterate(new BigInteger[] { BigInteger.ONE, BigInteger.ONE },
               p -> new BigInteger[] { p[1], p[0].add(p[1]) })
               .limit(91)
      .forEach(p -> System.out.println(p[0]));
    System.out.println("-------------------------------------------------------------");
    Stream.iterate(new long[] { 1, 1 }, p -> new long[] { p[1], p[0] + p[1] })
          .limit(91)
          .skip(10)
          .findFirst().ifPresent(p -> System.out.println(p[0]));
    System.out.println("-------------------------------------------------------------");
    }
}
